name: Test, Build and Deploy Devsu DevOps Demo to AKS
on:
  push:
    branches: [ "main" ]

env:
  AKS_NAME: dev1-aks-devsu-devops-demo
  AKS_RG: rg-devsu-devops-demo
  ENV: dev1

permissions:
      id-token: write
      contents: read
jobs:
  test:
    name: Test and Build the App into a Docker Container
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Carry out Static Analysis of Code
    - name: Static Code Analysis
      run: |-
        cd app/
        npm audit
      continue-on-error: true
    
    # Carry out Unit Testing and Code Coverage with jest
    - name: Unit Testing and Code Coverage
      run: |-
        cd app/
        npm i jest
        npm run coverage

  build-push:
    name: Build Docker Image and Push to DockerHub
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push to dockerHub
      uses: docker/build-push-action@v2
      with:
        context: app/
        push: true
        tags: elvismjorgen/devsu-demo:latest, elvismjorgen/devsu-demo:${{ github.run_number }}

  deploy-infrastructure:
    name: Deploy Infrastructure on Azure
    runs-on: ubuntu-latest
    needs: build-push
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        
      - name: 'Log in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply --auto-approve

  deploy-application:
    name: Deploy Application on AKS Cluster
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    defaults:
      run:
        shell: bash
        working-directory: k8s-manifest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        
      - name: 'Log in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create K8S Objects from Manifest Files
        run: |-
          az aks get-credentials --resource-group ${{ env.AKS_RG }} --name ${{ env.AKS_NAME }}
          kubectl apply -k ${{ env.ENV }}/
          chmod +x ../scripts/generate_secrets.sh
          ../scripts/generate_secrets.sh ${{ env.ENV }}
